{"version":3,"sources":["./src/app/modules/plcs/container/plc.component.ts","./src/app/modules/plcs/container/plc.component.html","./src/app/modules/plcs/plcs.module.ts","./src/app/modules/plcs/components/connect-plc/connect.component.ts","./src/app/modules/plcs/components/connect-plc/connect.component.html","./src/app/shared/animations/index.ts","./src/app/modules/plcs/models/plc-table.ts","./src/app/shared/modules/index.ts"],"names":[],"mappings":"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","file":"modules-plcs-plcs-module-es2015.js","sourcesContent":["import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { PLC } from '@sharedModels';\nimport { TableColumn } from '@sharedModels';\nimport * as actions from '@actions';\nimport { AppState } from '@reducers';\nimport { ConnectData, PlcControl, PlcTable } from '../models/plc-table';\nimport { ModalComponent } from '@sharedModules';\nimport { fadeInFadeOut } from '@sharedAnimations';\nimport { WebsocketService } from 'src/app/shared/websocket/websocket.service';\nimport { WebsocketEnums } from '@sharedEnums';\n@Component({\n  selector: 'plc',\n  templateUrl: './plc.component.html',\n  styles: [\n    '.btn{background-color: #2d3748; margin-top: 0.5rem; outline: none}',\n    '.btn:hover{background-color: #e2e8f0; margin-top: 0.5rem}',\n  ],\n  animations: [fadeInFadeOut],\n})\nexport class PlcComponent implements OnInit, OnDestroy {\n  show: boolean;\n  removeText: string;\n  toRemove: PLC;\n  plc$: Observable<any>;\n  plcSubscription: Subscription;\n  editData: PLC;\n  rows: any[];\n  dataBackup: PLC[];\n  plcControl: PlcControl;\n  columns: TableColumn[] = [\n    {\n      name: 'Name',\n      sort_by: false,\n      descending: true,\n      property_name: 'name',\n      cell_type: 'text',\n    },\n    {\n      name: 'IP Address',\n      sort_by: false,\n      descending: true,\n      property_name: 'ipAddress',\n      cell_type: 'text',\n    },\n    {\n      name: 'Serial Number',\n      sort_by: false,\n      descending: true,\n      property_name: 'serialNumber',\n      cell_type: 'text',\n    },\n    {\n      name: 'Firmware',\n      sort_by: false,\n      descending: true,\n      property_name: 'firmware',\n      cell_type: 'text',\n    },\n    {\n      name: 'Status',\n      sort_by: false,\n      descending: true,\n      property_name: 'status',\n      cell_type: 'status',\n    },\n    {\n      name: 'Last status change',\n      sort_by: false,\n      descending: true,\n      property_name: 'lastStatusChange',\n      cell_type: 'date',\n    },\n    {\n      name: 'Actions',\n      sort_by: false,\n      cell_type: 'action',\n      actions: [\n        {\n          type: 'edit',\n          icon: 'fa-edit',\n          text: 'edit',\n          title: 'Edit',\n        },\n        {\n          type: 'delete',\n          icon: 'fa-trash-alt',\n          text: 'delete',\n          title: 'Delete',\n        },\n      ],\n    },\n  ];\n\n  @ViewChild('deleteModal') deleteModal: ModalComponent;\n  @ViewChild('plcModal') plcModal: ModalComponent;\n  @ViewChild('plcEditModal') plcEditModal: ModalComponent;\n\n  // set necessary variables and select data from store\n  constructor(private store: Store<AppState>, private ws: WebsocketService) {\n    this.plc$ = this.store.select((state) => state.plcs.plcs);\n    this.show = false;\n    this.plcControl = 'new';\n  }\n\n  // sub to store and pass data to components\n  ngOnInit(): void {\n    this.plcSubscription = this.plc$.subscribe((response: PLC[]) => {\n      this.dataBackup = [...response];\n\n      response?.length > this.rows?.length &&\n        this.store.dispatch(new actions.LoadToolsPLC(response[response.length - 1].id));\n\n      this.rows = [\n        ...response?.map(\n          (x) =>\n            new PlcTable(\n              x.name,\n              x.ipAddress,\n              x.connection.lastStatusChange,\n              x.hardwareInformation.serialNumber,\n              x.hardwareInformation.firmwareNumber,\n              x.connection.status\n            )\n        ),\n      ];\n      this.rows.sort((a, b) => (b.name.toLowerCase() > a.name.toLowerCase() ? -1 : 1));\n    });\n  }\n\n  // unsub from store\n  ngOnDestroy() {\n    this.plcSubscription && this.plcSubscription.unsubscribe();\n  }\n\n  tableActionsHandler(event: { type; item }) {\n    switch (event.type) {\n      case 'edit': {\n        this.editData = { ...event.item };\n        this.plcEditModal.open();\n        break;\n      }\n      case 'delete': {\n        this.toRemove = {\n          ...this.dataBackup.filter(\n            (x) => x.name === event.item.name && x.ipAddress === event.item.ipAddress\n          )[0],\n        };\n        this.removeText = `Do you really want to remove ${this.toRemove.name} ?`;\n        this.deleteModal.open();\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  plcDialog(): void {\n    this.plcModal.open();\n  }\n\n  // call action to delete it from store & BE\n  deletePlc() {\n    this.store.dispatch(new actions.RemovePlc(this.toRemove.id));\n  }\n\n  plcHandler(item: { data: ConnectData; edit: boolean }): void {\n    let plc: PLC;\n    switch (item.edit) {\n      case false: {\n        plc = new PLC(\n          null,\n          item.data.name,\n          item.data.ipAddress,\n          { lastStatusChange: null, status: null },\n          { serialNumber: null, firmwareNumber: null },\n          []\n        );\n        this.store.dispatch(new actions.CreatePlc(plc));\n        break;\n      }\n      case true: {\n        const index = this.dataBackup?.findIndex(\n          (x) => x.name === item.data.name || x.ipAddress === item.data.ipAddress\n        );\n        plc = { ...this.dataBackup[index], name: item.data.name, ipAddress: item.data.ipAddress };\n        this.store.dispatch(new actions.UpdatePlc(plc));\n\n        const find = this.rows.find((x) => x.name === plc.name && x.ipAddress !== plc.ipAddress);\n        find && this.store.dispatch(new actions.LoadToolsPLC(plc.id));\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n}\n","<div class=\"w-full h-full overflow-y-hidden\">\n  <div class=\"flex flex-row justify-end\" [ngClass]=\"!rows.length && 'bg-gray-100'\">\n    <button\n      class=\"bg-white mx-5 mb-2 hover:text-black hover:bg-gray-100 h-auto rounded text-white font-thin py-2 px-4 border border-gray-400 shadow btn\"\n      routerLink=\"/create-unit\"\n      (click)=\"plcControl = 'new'; show = true; plcDialog()\"\n    >\n      Add PLC\n    </button>\n  </div>\n  <app-modal #plcModal [closeOnOutsideClick]=\"false\">\n    <ng-template #modalBody>\n      <connect-plc\n        [edit]=\"false\"\n        (cancel)=\"plcModal.close()\"\n        (action)=\"plcHandler($event); plcModal.close()\"\n      >\n      </connect-plc>\n    </ng-template>\n  </app-modal>\n  <app-modal #plcEditModal [closeOnOutsideClick]=\"false\">\n    <ng-template #modalBody>\n      <connect-plc\n        [edit]=\"true\"\n        [data]=\"editData\"\n        (cancel)=\"plcEditModal.close()\"\n        (action)=\"plcHandler($event); plcEditModal.close()\"\n      >\n      </connect-plc> </ng-template\n  ></app-modal>\n  <app-modal #deleteModal [closeOnOutsideClick]=\"false\">\n    <ng-template #modalBody>\n      <app-delete-confirmation\n        [title]=\"'Remove plc'\"\n        [text]=\"removeText\"\n        [actionName]=\"'Remove'\"\n        (cancel)=\"deleteModal.close()\"\n        (action)=\"deletePlc(); deleteModal.close()\"\n      >\n      </app-delete-confirmation>\n    </ng-template>\n  </app-modal>\n  <app-table\n    *ngIf=\"rows.length; else noData\"\n    [columns]=\"columns\"\n    [data]=\"rows\"\n    (action)=\"tableActionsHandler($event)\"\n  ></app-table>\n\n  <ng-template #noData>\n    <app-no-data\n      [image]=\"'empty'\"\n      [title]=\"'PLC(s) not found!'\"\n      [text]=\"'Please create at least one PLC'\"\n    ></app-no-data>\n  </ng-template>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PlcComponent } from './container/plc.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ConnectComponent } from './components/connect-plc/connect.component';\n\nconst routes: Routes = [{ path: '', component: PlcComponent }];\n\n@NgModule({\n  declarations: [PlcComponent, ConnectComponent],\n  imports: [CommonModule, SharedModule, ReactiveFormsModule, RouterModule.forChild(routes)],\n})\nexport class PlcsModule {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PLC } from '@sharedModels';\n\n@Component({\n  selector: 'connect-plc',\n  templateUrl: './connect.component.html',\n  styles: [\n    '.btn{background-color: #2d3748; outline: none}',\n    '.btn:hover{background-color: #e2e8f0}',\n  ],\n})\nexport class ConnectComponent {\n  plcForm: FormGroup;\n  submitted: boolean;\n  btnTxt: string;\n  plcControl: boolean;\n  styleLength: number;\n  _data: PLC;\n  @Input() edit = false;\n  @Input() set data(data: PLC) {\n    data &&\n      ((this._data = data),\n      this.plcForm.patchValue({ name: data.name, ipAddress: data.ipAddress }));\n  }\n  @Output() action: EventEmitter<any> = new EventEmitter();\n  @Output() cancel: EventEmitter<any> = new EventEmitter();\n\n  constructor(private fb: FormBuilder) {\n    this.submitted = false;\n    this.plcForm = this.fb.group({\n      name: [null, Validators.required],\n      ipAddress: [\n        null,\n        [\n          Validators.required,\n          Validators.pattern(\n            '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'\n          ),\n        ],\n      ],\n    });\n  }\n\n  onCancel() {\n    this.cancel.emit();\n  }\n\n  onAction() {\n    this.action.emit();\n  }\n\n  // check for erors in form control\n  checkErrors(control: string): boolean {\n    let result: boolean;\n    (this.plcForm.get(control).dirty || (this.submitted && !this.plcForm.get(control).dirty)) &&\n    !this.plcForm.get(control).valid\n      ? (result = true)\n      : (result = false);\n    return result;\n  }\n\n  submit() {\n    this.submitted = true;\n    this.plcForm.valid && this.action.emit({ data: this.plcForm.value, edit: this.edit });\n  }\n}\n","<div class=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4 sm:max-w-lg sm:w-full\">\n  <div class=\"sm:flex sm:items-start\">\n    <div class=\"text-center sm:mt-0 sm:ml-4 sm:text-left\">\n      <h3 class=\"text-lg mt-2 leading-6 font-medium text-gray-700 align-middle\" id=\"modal-headline\">\n        <i class=\"fas fa-robot\"></i>\n        <span class=\"ml-2\">{{ edit ? 'Edit Machine' : 'Connect to new Machine' }}</span>\n      </h3>\n      <div class=\"mt-2\">\n        <form [formGroup]=\"plcForm\" (ngSubmit)=\"submit()\" class=\"w-full\">\n          <div class=\"flex flex-row\">\n            <div class=\"flex flex-col\">\n              <label\n                for=\"name\"\n                class=\"block text-sm font-bold mb-2\"\n                [ngClass]=\"checkErrors('name') ? 'text-red-500' : 'text-gray-700'\"\n                >Plc name<span class=\"text-red-500\">*</span></label\n              >\n              <input\n                id=\"name\"\n                type=\"text\"\n                formControlName=\"name\"\n                class=\"appearance-none block w-40 h-8 bg-gray-200 text-gray-700 disabled:text-gray-500 border rounded py-3 px-4 mb-1 leading-tight focus:outline-none focus:bg-white text-xs\"\n                [ngClass]=\"checkErrors('name') ? 'border-red-500' : 'bg-gray-200'\"\n              />\n            </div>\n            <div class=\"ml-2 flex flex-col\">\n              <label\n                for=\"ip\"\n                class=\"block text-sm font-bold mb-2\"\n                [ngClass]=\"checkErrors('ipAddress') ? 'text-red-500' : 'text-gray-700'\"\n                >IP Address<span class=\"text-red-500\">*</span></label\n              >\n              <input\n                id=\"ip\"\n                type=\"text\"\n                formControlName=\"ipAddress\"\n                class=\"appearance-none block w-40 h-8 bg-gray-200 text-gray-700 disabled:text-gray-500 border rounded py-3 px-4 mb-2 leading-tight focus:outline-none focus:bg-white text-xs\"\n                [ngClass]=\"checkErrors('ipAddress') ? 'border-red-500' : 'bg-gray-200'\"\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"bg-gray-100 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n  <span class=\"flex w-full rounded-md shadow-sm sm:ml-3 sm:w-auto\">\n    <button\n      type=\"submit\"\n      class=\"inline-flex justify-center w-full rounded-md border border-transparent px-4 py-2 text-base leading-6 font-medium shadow-sm focus:outline-none transition ease-in-out duration-150 sm:text-sm sm:leading-5\"\n      [ngClass]=\"\n        plcForm.invalid\n          ? 'cursor-not-allowed bg-gray-200 text-gray-400'\n          : 'text-white cursor-pointer btn hover:text-black'\n      \"\n      [attr.disabled]=\"plcForm.invalid ? true : null\"\n      (click)=\"submit()\"\n    >\n      {{ edit ? 'Update' : 'Connect' }}\n    </button>\n  </span>\n  <span class=\"mt-3 flex w-full rounded-md shadow-sm sm:mt-0 sm:w-auto\">\n    <button\n      type=\"button\"\n      class=\"inline-flex justify-center w-full rounded-md border border-gray-300 px-4 py-2 bg-white text-base leading-6 font-medium text-gray-700 shadow-sm focus:outline-none transition ease-in-out duration-150 sm:text-sm sm:leading-5 hover:text-gray-700 hover:font-semibold\"\n      (click)=\"onCancel()\"\n    >\n      Cancel\n    </button>\n  </span>\n</div>\n","export * from './animations';\nexport * from './route-animations';\n","export type PlcControl = 'new' | 'edit';\nexport class PlcTable {\n  constructor(\n    public name: string,\n    public ipAddress: string,\n    public lastStatusChange: Date,\n    public serialNumber: string,\n    public firmware: string,\n    public status: string\n  ) {}\n}\n\nexport interface ConnectData {\n  name: string;\n  ipAddress: string;\n}\n","export * from './modal/container/modal.component';\nexport * from './modal/components/delete/delete.component';\n"],"sourceRoot":"webpack:///"}